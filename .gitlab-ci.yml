stages:
  - build
  - deploy

image:
  name: docker:stable

variables:
  IMAGE_ID: $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID

build:image:gitlab:
  stage: build
  only:
    - master
  environment:
    name: gitlab-registry
  tags:
    - docker
  before_script:
    - mkdir -p /root/.docker
    - vault write -field=token auth/approle/login role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID >~/.vault-token
    - vault kv get -field=dockerconfig cisecrets/dockerconfig | base64 -d >/root/.docker/config
  script:
    - docker build --no-cache . -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
    - docker tag $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID $CI_REGISTRY_IMAGE:latest
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
    - docker push $CI_REGISTRY_IMAGE:latest

deploy:image:production:
  stage: deploy
  only:
    - master
  tags:
    - docker
  before_script:
    - vault write -field=token auth/approle/login role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID >~/.vault-token
    - vault kv get -field=kubeconfig cisecrets/kubeconfig-wpcluster2 | base64 -d >/tmp/kubeconfig
  script:
    - kubectl --kubeconfig=/tmp/kubeconfig -n i18n set image deployment i18n i18n=$CI_REGISTRY_IMAGE:$CI_PIPELINE_ID

