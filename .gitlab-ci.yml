# stages:
#   #- build
#   - deploy

image: tetraweb/php

before_script:
  - mkdir ~/.ssh
  - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
  - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
  - apk -q --no-progress add vault
  - vault write -field=token auth/approle/login role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID >~/.vault-token
  - vault kv get -field=id_rsa cisecrets/ssh | base64 -d >~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
  - vault kv get -field=id_rsa.pub cisecrets/ssh | base64 -d >~/.ssh/id_rsa.pub
  - vault kv get -field=known_hosts cisecrets/ssh | base64 -d >~/.ssh/known_hosts
  - apt-get update
  - apt-get install zip unzip vault
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"
  - php composer.phar install
  - npm install
  - npm run deploy
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  # - mkdir -p ~/.ssh
  # - eval $(ssh-agent -s)
  # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

variables:
  IMAGE_ID: $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
# build:image:gitlab:
#   stage: build
#   only:
#     - master
#   environment:
#     name: gitlab-registry
#   tags:
#     - docker
#   script:
#     - mkdir -p /root/.docker
#     - vault kv get -field=dockerconfig cisecrets/dockerconfig | base64 -d >/root/.docker/config
#     - docker build --no-cache . -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
#     - docker tag $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID $CI_REGISTRY_IMAGE:latest
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
#     - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
#     - docker push $CI_REGISTRY_IMAGE:latest
#   artifacts:
#     paths:
#       - artefacts/*.zip


# deploy:image:production:
#   stage: deploy
#   only:
#     - master
#   tags:
#     - docker
#   script:
#     - wget -qO /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.2/bin/linux/amd64/kubectl && chmod 755 /usr/local/bin/kubectl
#     - vault kv get -field=kubeconfig cisecrets/kubeconfig-wpcluster2 | base64 -d >/tmp/kubeconfig
#     - kubectl --kubeconfig=/tmp/kubeconfig -n i18n set image deployment i18n i18n=$CI_REGISTRY_IMAGE:$CI_PIPELINE_ID


stage_deploy:
  artifacts:
    paths:
      - build/
  environment:
    name: cloudron-production-i18n
    url: https://i18n2.brandlight.org
  only:
    - master
  script:
    - scp -P22 -r build/* deploy-bot@my.brandlight.org:home/yellowtent/appsdata/2ba0c446-0782-4fc9-bdb5-6941afe37943/data/public/

# # Deploy 'develop' branch to our 'waves' development host.
# deploy:cloudron:production:i18n:
#   stage: deploy
#   only:
#     - master
#   environment:
#     name: cloudron-production-i18n
#     url: https://i18n2.brandlight.org
#   script:
#     - ssh deploy-bot@my.brandlight.org "cd /home/yellowtent/appsdata/2ba0c446-0782-4fc9-bdb5-6941afe37943/data/public && git checkout master && git pull origin master && exit"

